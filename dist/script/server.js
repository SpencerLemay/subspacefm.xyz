const io=require("socket.io")(3e3),crypto=require("crypto"),users=[];var messages=[],getSessionid=function(){return crypto.randomBytes(16).toString("base64")};function getUserName(e){return null==e&&(e="Guest"+Math.floor(1e4*Math.random())),users.forEach((s=>{s.name===e&&(e=getUserName(e))})),e}function newUser(e){var s=getSessionid();return{name:getUserName(),sessionid:s,pwhash:"",ttl:30}}io.on("connection",(e=>{e.on("newUser",(s=>{var n=newUser(s);null!=n&&(users.push(n),console.log("NEW USER CONNECTED: "+n.name),e.emit("getSession",{name:n.name,sessionid:n.sessionid}),messages.forEach((s=>{e.emit("chat-message",{message:s.message,name:s.name})})),e.broadcast.emit("user-connected",{name:n.name}))})),e.on("command",(s=>{var n=users.find((({sessionid:e})=>e===s.sessionid));if(null!=n){if(console.log("COMMAND ISSUED "+s.cmd+"."),"changename"===s.cmd){var a=n.name;if(console.log("test1 "),null==s.args)return void e.emit("error-message",{message:"ERROR: No name specified"});if(null!=users.find((({name:e})=>e===s.args))){var r=e.handshake.address;return console.log("Connection from "+r.address+" tried using name "+s.args),void e.emit("error-message",{message:"ERROR: User name already taken"})}var o=users.indexOf(n);return users[o].name=s.args,console.log("User "+a+"changed name to "+s.args),e.emit("user-name-change",{oldname:a,name:s.args}),void e.broadcast.emit("user-name-change",{oldname:a,name:s.args})}"help"!==s.cmd||e.emit("help",{message:"Available commands: !changename <name>."})}else e.emit("error-message",{message:"ERROR: Invalid or expired sessionid, refresh to chat."})})),e.on("send-chat-message",(s=>{if(null==(n=users.find((({sessionid:e})=>e===s.sessionid)))){var n=newUser(s);console.log("NEW USER CONNECTED: "+n.name),e.emit("getSession",{name:n.name,sessionid:n.sessionid})}console.log(n.name+" SAID: "+s.message),e.broadcast.emit("chat-message",{message:s.message,name:n.name}),messages.push({message:s.message,name:n.name}),messages.length>50&&messages.shift()})),e.on("disconnect",(s=>{var n=users.find((({sessionid:e})=>e===s.sessionid));if(null!=n){console.log("DISCONNECTED "+n.name),e.broadcast.emit("user-disconnected",n.name);var a=users.findIndex(n);users.splice(a,a)}else e.emit("error-message",{message:"ERROR: Invalid or expired sessionid, refresh to chat."})}))}));